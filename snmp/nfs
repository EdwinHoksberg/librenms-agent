#!/usr/bin/env perl

=head1 NAME

nfs - LibreNMS JSON style SNMP extend for NFS monitoring

=head1 VERSION

0.0.1

=head1 SYNOPSIS

nfs [B<-w>] [B<-b>] [B<-o> <cache base>]

nfs --help|-h

nfs --version|-v

=head1 SNMPD CONFIG

    extend nfs /etc/snmp/extends/nfs -b

or if using cron...

    extend nfs cat /var/cache/nfs.json.snmp

=head1 DESCRIPTION

Uses showmount and nfsstat to gather information for the OSes below for NFS.

    FreeBSD
    Linux

=head1 FLAGS

=head2 -w

Write the results out.

=head2 -b

Print out the compressed data if GZip+Base64 is smaller.

=head2 -o <cache base>

Where to write the results to. Defaults to '/var/cache/nfs.json',
meaning it will be written out to the two locations.

    /var/cache/nfs.json
    /var/cache/nfs.json.snmp

The later is for use with returning data for SNMP. Will be compressed
if possible.

=cut

##
##
## General Notes
##
##
#
# FreeBSD used as the design basis given better stats produced and as well
# as actually documented.

###
###
### Linux Notes
###
###
#
# What the following map to if if there is a FreeBSD equivalent is not clear.
#
# fs_locations
# test_stateid
# fsid_present
# open_conf
# confirm
# null

use strict;
use warnings;
use Getopt::Long;
use File::Slurp;
use MIME::Base64;
use IO::Compress::Gzip qw(gzip $GzipError);
use Pod::Usage;
use JSON;

#the version of returned data
my $VERSION = 1;

# ensure sbin is in the path
$ENV{PATH} = $ENV{PATH} . ':/sbin:/usr/sbin';

my $pretty;
my $cache_base = '/var/cache/nfs.json';
my $write;
my $compress;
my $version;
my $help;
GetOptions(
	'o=s'   => \$cache_base,
	w       => \$write,
	b       => \$compress,
	v       => \$version,
	version => \$version,
	h       => \$help,
	help    => \$help,
);

if ($version) {
	pod2usage( -exitval => 255, -verbose => 99, -sections => qw(VERSION), -output => \*STDOUT, );
	exit 255;
}

if ($help) {
	pod2usage( -exitval => 255, -verbose => 2, -output => \*STDOUT, );
	exit 255;
}

#the data to return
my $to_return = {
	'version'     => $VERSION,
	'error'       => '0',
	'errorString' => '',
};
my $data = {
	is_client  => 0,
	is_server  => 0,
	os         => $^O,
	mounts     => [],
	mounted_by => [],
	stats      => {
		client_rpc_Getattr        => undef,
		client_rpc_Setattr        => undef,
		client_rpc_Lookup         => undef,
		client_rpc_Readlink       => undef,
		client_rpc_Read           => undef,
		client_rpc_Write          => undef,
		client_rpc_Create         => undef,
		client_rpc_Remove         => undef,
		client_rpc_Rename         => undef,
		client_rpc_Link           => undef,
		client_rpc_Symlink        => undef,
		client_rpc_Mkdir          => undef,
		client_rpc_Rmdir          => undef,
		client_rpc_Readdir        => undef,
		client_rpc_RdirPlus       => undef,
		client_rpc_Access         => undef,
		client_rpc_Mknod          => undef,
		client_rpc_Fsstat         => undef,
		client_rpc_FSinfo         => undef,
		client_rpc_pathConf       => undef,
		client_rpc_Commit         => undef,
		client_rpc_SetClId        => undef,
		client_rpc_SetClIdCf      => undef,
		client_rpc_Lock           => undef,
		client_rpc_LockT          => undef,
		client_rpc_LockU          => undef,
		client_rpc_Open           => undef,
		client_rpc_OpenCfr        => undef,
		client_rpc_OpenDownGr     => undef,
		client_rpc_Close          => undef,
		client_rpc_RelLckOwn      => undef,
		client_rpc_FreeStateID    => undef,
		client_rpc_PutRootFH      => undef,
		client_rpc_DelegRet       => undef,
		client_rpc_GetAcl         => undef,
		client_rpc_SetAcl         => undef,
		client_rpc_ExchangeId     => undef,
		client_rpc_CreateSess     => undef,
		client_rpc_DestroySess    => undef,
		client_rpc_DestroyClId    => undef,
		client_rpc_LayoutGet      => undef,
		client_rpc_GetDevInfo     => undef,
		client_rpc_LayoutCommit   => undef,
		client_rpc_LayoutReturn   => undef,
		client_rpc_ReclaimCompl   => undef,
		client_rpc_ReadDataS      => undef,
		client_rpc_WriteDataS     => undef,
		client_rpc_CommitDataS    => undef,
		client_rpc_OpenLayout     => undef,
		client_rpc_CreateLayout   => undef,
		client_rpc_BindConnSess   => undef,
		client_rpc_LookupOpen     => undef,
		client_rpc_IOAdvise       => undef,
		client_rpc_Allocate       => undef,
		client_rpc_Copy           => undef,
		client_rpc_Seek           => undef,
		client_rpc_SeekDataS      => undef,
		client_rpc_GetExtattr     => undef,
		client_rpc_SetExtattr     => undef,
		client_rpc_RmExtattr      => undef,
		client_rpc_ListExtattr    => undef,
		client_rpc_Deallocate     => undef,
		client_rpc_LayoutError    => undef,
		client_OpenOwner          => undef,
		client_Opens              => undef,
		client_LockOwner          => undef,
		client_Locks              => undef,
		client_Delegs             => undef,
		client_LocalOwn           => undef,
		client_LocalOpen          => undef,
		client_LocalLown          => undef,
		client_LocalLock          => undef,
		client_Layouts            => undef,
		client_rpc_info_TimedOut  => undef,
		client_rpc_info_Invalid   => undef,
		client_rpc_info_X_Replies => undef,
		client_rpc_info_Retries   => undef,
		client_rpc_info_Requests  => undef,
		client_cache_Attr_Hits    => undef,
		client_cache_Attr_Misses  => undef,
		client_cache_Lkup_Hits    => undef,
		client_cache_Lkup_Misses  => undef,
		client_cache_BioR_Hits    => undef,
		client_cache_BioR_Misses  => undef,
		client_cache_BioW_Hits    => undef,
		client_cache_BioW_Misses  => undef,
		client_cache_BioRL_Hits   => undef,
		client_cache_BioRL_Misses => undef,
		client_cache_BioD_Hits    => undef,
		client_cache_BioD_Misses  => undef,
		client_cache_DirE_Hits    => undef,
		client_cache_DirE_Misses  => undef,
		server_rpc_Getattr        => undef,
		server_rpc_Setattr        => undef,
		server_rpc_Lookup         => undef,
		server_rpc_Readlink       => undef,
		server_rpc_Read           => undef,
		server_rpc_Write          => undef,
		server_rpc_Create         => undef,
		server_rpc_Remove         => undef,
		server_rpc_Rename         => undef,
		server_rpc_Link           => undef,
		server_rpc_Symlink        => undef,
		server_rpc_Mkdir          => undef,
		server_rpc_Rmdir          => undef,
		server_rpc_Readdir        => undef,
		server_rpc_RdirPlus       => undef,
		server_rpc_Access         => undef,
		server_rpc_Mknod          => undef,
		server_rpc_Fsstat         => undef,
		server_rpc_FSinfo         => undef,
		server_rpc_pathConf       => undef,
		server_rpc_Commit         => undef,
		server_rpc_LookupP        => undef,
		server_rpc_SetClId        => undef,
		server_rpc_SetClIdCf      => undef,
		server_rpc_Open           => undef,
		server_rpc_OpenAttr       => undef,
		server_rpc_OpenDwnGr      => undef,
		server_rpc_OpenCfrm       => undef,
		server_rpc_DelePurge      => undef,
		server_rpc_DelRet         => undef,
		server_rpc_GetFH          => undef,
		server_rpc_Lock           => undef,
		server_rpc_LockT          => undef,
		server_rpc_LockU          => undef,
		server_rpc_Close          => undef,
		server_rpc_Verify         => undef,
		server_rpc_NVerify        => undef,
		server_rpc_PutFH          => undef,
		server_rpc_PutPubFH       => undef,
		server_rpc_PutRootFH      => undef,
		server_rpc_Renew          => undef,
		server_rpc_RestoreFH      => undef,
		server_rpc_SaveFH         => undef,
		server_rpc_Secinfo        => undef,
		server_rpc_RelLockOwn     => undef,
		server_rpc_V4Create       => undef,
		server_rpc_BackChannelCt  => undef,
		server_rpc_BindConnToSes  => undef,
		server_rpc_ExchangeID     => undef,
		server_rpc_CreateSess     => undef,
		server_rpc_DestroySess    => undef,
		server_rpc_FreeStateID    => undef,
		server_rpc_GetDirDeleg    => undef,
		server_rpc_GetDevInfo     => undef,
		server_rpc_GetDevList     => undef,
		server_rpc_layoutCommit   => undef,
		server_rpc_LayoutGet      => undef,
		server_rpc_LayoutReturn   => undef,
		server_rpc_GetDirDeleg    => undef,
		server_rpc_GetDevInfo     => undef,
		server_rpc_GetDevList     => undef,
		server_rpc_layoutCommit   => undef,
		server_rpc_LayoutGet      => undef,
		server_rpc_LayoutReturn   => undef,
		server_rpc_SecInfNoName   => undef,
		server_rpc_Sequence       => undef,
		server_rpc_SetSSV         => undef,
		server_rpc_TestStateID    => undef,
		server_rpc_WantDeleg      => undef,
		server_rpc_DestroyClId    => undef,
		server_rpc_ReclaimCompl   => undef,
		server_rpc_Allocate       => undef,
		server_rpc_Copy           => undef,
		server_rpc_CopyNotify     => undef,
		server_rpc_Deallocate     => undef,
		server_rpc_IOAdvise       => undef,
		server_rpc_LayoutError    => undef,
		server_rpc_LayoutStats    => undef,
		server_rpc_OffloadCncl    => undef,
		server_rpc_OffloadStat    => undef,
		server_rpc_ReadPlus       => undef,
		server_rpc_Seek           => undef,
		server_rpc_WriteSame      => undef,
		server_rpc_Clone          => undef,
		server_rpc_GetExtattr     => undef,
		server_rpc_SetExtattr     => undef,
		server_rpc_ListExtattr    => undef,
		server_rpc_RmExtattr      => undef,
		server_Clients            => undef,
		server_OpenOwner          => undef,
		server_Opens              => undef,
		server_LockOwner          => undef,
		server_Locks              => undef,
		server_Delegs             => undef,
		server_Layouts            => undef,
		server_cache_Inprog       => undef,
		server_cache_NonIdem      => undef,
		server_cache_Misses       => undef,
		server_cache_CacheSize    => undef,
		server_cache_TCPPeak      => undef,
	}
};

####
####
#### handle getting stats for FreeBSD
####
####
if ( $^O eq 'freebsd' ) {
	eval {
		my $output_raw = `nfsstat -E  --libxo json`;
		my $stats_json = decode_json($output_raw);
		$data->{stats}{client_rpc_Getattr}  = $stats_json->{nfsstat}{nfsv4}{clientstats}{operations}{getattr};
		$data->{stats}{client_rpc_Setattr}  = $stats_json->{nfsstat}{nfsv4}{clientstats}{operations}{setattr};
		$data->{stats}{client_rpc_Lookup}   = $stats_json->{nfsstat}{nfsv4}{clientstats}{operations}{lookup};
		$data->{stats}{client_rpc_Readlink} = $stats_json->{nfsstat}{nfsv4}{clientstats}{operations}{readlink};
		$data->{stats}{client_rpc_Read}     = $stats_json->{nfsstat}{nfsv4}{clientstats}{operations}{read};
		$data->{stats}{client_rpc_Write}    = $stats_json->{nfsstat}{nfsv4}{clientstats}{operations}{write};
		$data->{stats}{client_rpc_Create}   = $stats_json->{nfsstat}{nfsv4}{clientstats}{operations}{create};
		$data->{stats}{client_rpc_Remove}   = $stats_json->{nfsstat}{nfsv4}{clientstats}{operations}{remove};
		$data->{stats}{client_rpc_Rename}   = $stats_json->{nfsstat}{nfsv4}{clientstats}{operations}{rename};
		$data->{stats}{client_rpc_Link}     = $stats_json->{nfsstat}{nfsv4}{clientstats}{operations}{link};
		$data->{stats}{client_rpc_Symlink}  = $stats_json->{nfsstat}{nfsv4}{clientstats}{operations}{symlink};
		$data->{stats}{client_rpc_Mkdir}    = $stats_json->{nfsstat}{nfsv4}{clientstats}{operations}{mkdir};
		$data->{stats}{client_rpc_Rmdir}    = $stats_json->{nfsstat}{nfsv4}{clientstats}{operations}{rmdir};
		$data->{stats}{client_rpc_Readdir}  = $stats_json->{nfsstat}{nfsv4}{clientstats}{operations}{readdir};
		$data->{stats}{client_rpc_RdirPlus} = $stats_json->{nfsstat}{nfsv4}{clientstats}{operations}{rdirplus};
		$data->{stats}{client_rpc_Access}   = $stats_json->{nfsstat}{nfsv4}{clientstats}{operations}{rdirplus};
		$data->{stats}{client_rpc_Mknod}    = $stats_json->{nfsstat}{nfsv4}{clientstats}{operations}{mknod};
		$data->{stats}{client_rpc_Fsstat}   = $stats_json->{nfsstat}{nfsv4}{clientstats}{operations}{fsstat};
		$data->{stats}{client_rpc_FSinfo}   = $stats_json->{nfsstat}{nfsv4}{clientstats}{operations}{fsinfo};
		$data->{stats}{client_rpc_pathConf} = $stats_json->{nfsstat}{nfsv4}{clientstats}{operations}{pathconf};
		$data->{stats}{client_rpc_Commit}   = $stats_json->{nfsstat}{nfsv4}{clientstats}{operations}{commit};
		$data->{stats}{client_rpc_SetClId}  = $stats_json->{nfsstat}{nfsv4}{clientstats}{operations}{setclientid};
		$data->{stats}{client_rpc_SetClIdCf}
			= $stats_json->{nfsstat}{nfsv4}{clientstats}{operations}{setclientidcf};
		$data->{stats}{client_rpc_Lock}    = $stats_json->{nfsstat}{nfsv4}{clientstats}{operations}{lock};
		$data->{stats}{client_rpc_LockT}   = $stats_json->{nfsstat}{nfsv4}{clientstats}{operations}{lockt};
		$data->{stats}{client_rpc_LockU}   = $stats_json->{nfsstat}{nfsv4}{clientstats}{operations}{locku};
		$data->{stats}{client_rpc_Open}    = $stats_json->{nfsstat}{nfsv4}{clientstats}{operations}{open};
		$data->{stats}{client_rpc_OpenCfr} = $stats_json->{nfsstat}{nfsv4}{clientstats}{operations}{opencfr};
		$data->{stats}{client_rpc_OpenDownGr}
			= $stats_json->{nfsstat}{nfsv4}{clientstats}{operations}{nfsv41}{opendowngr};
		$data->{stats}{client_rpc_Close} = $stats_json->{nfsstat}{nfsv4}{clientstats}{operations}{nfsv41}{close};
		$data->{stats}{client_rpc_RelLckOwn}
			= $stats_json->{nfsstat}{nfsv4}{clientstats}{operations}{nfsv41}{rellckown};
		$data->{stats}{client_rpc_FreeStateID}
			= $stats_json->{nfsstat}{nfsv4}{clientstats}{operations}{nfsv41}{freestateid};
		$data->{stats}{client_rpc_PutRootFH}
			= $stats_json->{nfsstat}{nfsv4}{clientstats}{operations}{nfsv41}{putrootfh};
		$data->{stats}{client_rpc_DelegRet}
			= $stats_json->{nfsstat}{nfsv4}{clientstats}{operations}{nfsv41}{delegret};
		$data->{stats}{client_rpc_GetAcl} = $stats_json->{nfsstat}{nfsv4}{clientstats}{operations}{nfsv41}{getacl};
		$data->{stats}{client_rpc_SetAcl} = $stats_json->{nfsstat}{nfsv4}{clientstats}{operations}{nfsv41}{setacl};
		$data->{stats}{client_rpc_ExchangeId}
			= $stats_json->{nfsstat}{nfsv4}{clientstats}{operations}{nfsv41}{exchangeid};
		$data->{stats}{client_rpc_CreateSess}
			= $stats_json->{nfsstat}{nfsv4}{clientstats}{operations}{nfsv41}{createsess};
		$data->{stats}{client_rpc_DestroySess}
			= $stats_json->{nfsstat}{nfsv4}{clientstats}{operations}{nfsv41}{destroysess};
		$data->{stats}{client_rpc_DestroyClId}
			= $stats_json->{nfsstat}{nfsv4}{clientstats}{operations}{nfsv41}{destroyclid};
		$data->{stats}{client_rpc_LayoutGet}
			= $stats_json->{nfsstat}{nfsv4}{clientstats}{operations}{nfsv41}{layoutget};
		$data->{stats}{client_rpc_GetDevInfo}
			= $stats_json->{nfsstat}{nfsv4}{clientstats}{operations}{nfsv41}{getdevinfo};
		$data->{stats}{client_rpc_LayoutCommit}
			= $stats_json->{nfsstat}{nfsv4}{clientstats}{operations}{nfsv41}{layoutcomit};
		$data->{stats}{client_rpc_LayoutReturn}
			= $stats_json->{nfsstat}{nfsv4}{clientstats}{operations}{nfsv41}{layoutreturn};
		$data->{stats}{client_rpc_ReclaimCompl}
			= $stats_json->{nfsstat}{nfsv4}{clientstats}{operations}{nfsv41}{reclaimcompl};
		$data->{stats}{client_rpc_ReadDataS}
			= $stats_json->{nfsstat}{nfsv4}{clientstats}{operations}{nfsv41}{readdatas};
		$data->{stats}{client_rpc_WriteDataS}
			= $stats_json->{nfsstat}{nfsv4}{clientstats}{operations}{nfsv41}{writedatas};
		$data->{stats}{client_rpc_CommitDataS}
			= $stats_json->{nfsstat}{nfsv4}{clientstats}{operations}{nfsv41}{commitdatas};
		$data->{stats}{client_rpc_OpenLayout}
			= $stats_json->{nfsstat}{nfsv4}{clientstats}{operations}{nfsv41}{openlayout};
		$data->{stats}{client_rpc_CreateLayout}
			= $stats_json->{nfsstat}{nfsv4}{clientstats}{operations}{nfsv41}{createlayout};
		$data->{stats}{client_rpc_BindConnSess}
			= $stats_json->{nfsstat}{nfsv4}{clientstats}{operations}{nfsv41}{bindconnsess};
		$data->{stats}{client_rpc_LookupOpen}
			= $stats_json->{nfsstat}{nfsv4}{clientstats}{operations}{nfsv41}{lookupopen};
		$data->{stats}{client_rpc_IOAdvise}
			= $stats_json->{nfsstat}{nfsv4}{clientstats}{operations}{nfsv42}{ioadvise};
		$data->{stats}{client_rpc_Allocate}
			= $stats_json->{nfsstat}{nfsv4}{clientstats}{operations}{nfsv42}{allocate};
		$data->{stats}{client_rpc_Copy} = $stats_json->{nfsstat}{nfsv4}{clientstats}{operations}{nfsv42}{copy};
		$data->{stats}{client_rpc_Seek} = $stats_json->{nfsstat}{nfsv4}{clientstats}{operations}{nfsv42}{seek};
		$data->{stats}{client_rpc_SeekDataS}
			= $stats_json->{nfsstat}{nfsv4}{clientstats}{operations}{nfsv42}{seekdatas};
		$data->{stats}{client_rpc_GetExtattr}
			= $stats_json->{nfsstat}{nfsv4}{clientstats}{operations}{nfsv42}{getextattr};
		$data->{stats}{client_rpc_SetExtattr}
			= $stats_json->{nfsstat}{nfsv4}{clientstats}{operations}{nfsv42}{setextattr};
		$data->{stats}{client_rpc_RmExtattr}
			= $stats_json->{nfsstat}{nfsv4}{clientstats}{operations}{nfsv42}{rmextattr};
		$data->{stats}{client_rpc_ListExtattr}
			= $stats_json->{nfsstat}{nfsv4}{clientstats}{operations}{nfsv42}{listextattr};
		$data->{stats}{client_rpc_Deallocate}
			= $stats_json->{nfsstat}{nfsv4}{clientstats}{operations}{nfsv42}{deallocate};
		$data->{stats}{client_rpc_LayoutError}
			= $stats_json->{nfsstat}{nfsv4}{clientstats}{operations}{nfsv42}{layouterror};
		$data->{stats}{client_OpenOwner}          = $stats_json->{nfsstat}{nfsv4}{clientstats}{client}{openowner};
		$data->{stats}{client_Opens}              = $stats_json->{nfsstat}{nfsv4}{clientstats}{client}{opens};
		$data->{stats}{client_LockOwner}          = $stats_json->{nfsstat}{nfsv4}{clientstats}{client}{lockowner};
		$data->{stats}{client_Locks}              = $stats_json->{nfsstat}{nfsv4}{clientstats}{client}{locks};
		$data->{stats}{client_Delegs}             = $stats_json->{nfsstat}{nfsv4}{clientstats}{client}{delegs};
		$data->{stats}{client_LocalOwn}           = $stats_json->{nfsstat}{nfsv4}{clientstats}{client}{localown};
		$data->{stats}{client_LocalOpen}          = $stats_json->{nfsstat}{nfsv4}{clientstats}{client}{localopen};
		$data->{stats}{client_LocalLown}          = $stats_json->{nfsstat}{nfsv4}{clientstats}{client}{locallown};
		$data->{stats}{client_LocalLock}          = $stats_json->{nfsstat}{nfsv4}{clientstats}{client}{locallock};
		$data->{stats}{client_Layouts}            = $stats_json->{nfsstat}{nfsv4}{clientstats}{client}{layouts};
		$data->{stats}{client_rpc_info_TimedOut}  = $stats_json->{nfsstat}{nfsv4}{clientstats}{rpc}{timedout};
		$data->{stats}{client_rpc_info_Invalid}   = $stats_json->{nfsstat}{nfsv4}{clientstats}{rpc}{invalid};
		$data->{stats}{client_rpc_info_X_Replies} = $stats_json->{nfsstat}{nfsv4}{clientstats}{rpc}{timedout};
		$data->{stats}{client_rpc_info_Retries}   = $stats_json->{nfsstat}{nfsv4}{clientstats}{rpc}{retries};
		$data->{stats}{client_rpc_info_Requests}  = $stats_json->{nfsstat}{nfsv4}{clientstats}{rpc}{requests};
		$data->{stats}{client_cache_Attr_Hits}    = $stats_json->{nfsstat}{nfsv4}{clientstats}{cache}{attrhits};
		$data->{stats}{client_cache_Attr_Misses}  = $stats_json->{nfsstat}{nfsv4}{clientstats}{cache}{attrmisses};
		$data->{stats}{client_cache_Lkup_Hits}    = $stats_json->{nfsstat}{nfsv4}{clientstats}{cache}{lkuphits};
		$data->{stats}{client_cache_Lkup_Misses}  = $stats_json->{nfsstat}{nfsv4}{clientstats}{cache}{lkupmisses};
		$data->{stats}{client_cache_BioR_Hits}    = $stats_json->{nfsstat}{nfsv4}{clientstats}{cache}{biorhits};
		$data->{stats}{client_cache_BioR_Misses}  = $stats_json->{nfsstat}{nfsv4}{clientstats}{cache}{biormisses};
		$data->{stats}{client_cache_BioW_Hits}    = $stats_json->{nfsstat}{nfsv4}{clientstats}{cache}{biowhits};
		$data->{stats}{client_cache_BioW_Misses}  = $stats_json->{nfsstat}{nfsv4}{clientstats}{cache}{biowmisses};
		$data->{stats}{client_cache_BioRL_Hits}   = $stats_json->{nfsstat}{nfsv4}{clientstats}{cache}{biorlhits};
		$data->{stats}{client_cache_BioRL_Misses} = $stats_json->{nfsstat}{nfsv4}{clientstats}{cache}{biorlmisses};
		$data->{stats}{client_cache_BioD_Hits}    = $stats_json->{nfsstat}{nfsv4}{clientstats}{cache}{biodhits};
		$data->{stats}{client_cache_BioD_Misses}  = $stats_json->{nfsstat}{nfsv4}{clientstats}{cache}{biodmisses};
		$data->{stats}{client_cache_DirE_Hits}    = $stats_json->{nfsstat}{nfsv4}{clientstats}{cache}{direhits};
		$data->{stats}{client_cache_DirE_Misses}  = $stats_json->{nfsstat}{nfsv4}{clientstats}{cache}{diremisses};
		$data->{stats}{server_rpc_Getattr}        = $stats_json->{nfsstat}{nfsv4}{serverstats}{operations}{getattr};
		$data->{stats}{server_rpc_Setattr}        = $stats_json->{nfsstat}{nfsv4}{serverstats}{operations}{setattr};
		$data->{stats}{server_rpc_Lookup}         = $stats_json->{nfsstat}{nfsv4}{serverstats}{operations}{lookup};
		$data->{stats}{server_rpc_Readlink}       = $stats_json->{nfsstat}{nfsv4}{serverstats}{operations}{readlink};
		$data->{stats}{server_rpc_Read}           = $stats_json->{nfsstat}{nfsv4}{serverstats}{operations}{read};
		$data->{stats}{server_rpc_Write}          = $stats_json->{nfsstat}{nfsv4}{serverstats}{operations}{write};
		$data->{stats}{server_rpc_Create}         = $stats_json->{nfsstat}{nfsv4}{serverstats}{operations}{create};
		$data->{stats}{server_rpc_Remove}         = $stats_json->{nfsstat}{nfsv4}{serverstats}{operations}{remove};
		$data->{stats}{server_rpc_Rename}         = $stats_json->{nfsstat}{nfsv4}{serverstats}{operations}{rename};
		$data->{stats}{server_rpc_Link}           = $stats_json->{nfsstat}{nfsv4}{serverstats}{operations}{link};
		$data->{stats}{server_rpc_Symlink}        = $stats_json->{nfsstat}{nfsv4}{serverstats}{operations}{symlink};
		$data->{stats}{server_rpc_Mkdir}          = $stats_json->{nfsstat}{nfsv4}{serverstats}{operations}{mkdir};
		$data->{stats}{server_rpc_Rmdir}          = $stats_json->{nfsstat}{nfsv4}{serverstats}{operations}{rmdir};
		$data->{stats}{server_rpc_Readdir}        = $stats_json->{nfsstat}{nfsv4}{serverstats}{operations}{readdir};
		$data->{stats}{server_rpc_RdirPlus}       = $stats_json->{nfsstat}{nfsv4}{serverstats}{operations}{rdirplus};
		$data->{stats}{server_rpc_Access}         = $stats_json->{nfsstat}{nfsv4}{serverstats}{operations}{access};
		$data->{stats}{server_rpc_Mknod}          = $stats_json->{nfsstat}{nfsv4}{serverstats}{operations}{mknod};
		$data->{stats}{server_rpc_Fsstat}         = $stats_json->{nfsstat}{nfsv4}{serverstats}{operations}{fsstat};
		$data->{stats}{server_rpc_FSinfo}         = $stats_json->{nfsstat}{nfsv4}{serverstats}{operations}{fsinfo};
		$data->{stats}{server_rpc_pathConf}       = $stats_json->{nfsstat}{nfsv4}{serverstats}{operations}{pathconf};
		$data->{stats}{server_rpc_Commit}         = $stats_json->{nfsstat}{nfsv4}{serverstats}{operations}{commit};
		$data->{stats}{server_rpc_LookupP}        = $stats_json->{nfsstat}{nfsv4}{serverstats}{operations}{lookupp};
		$data->{stats}{server_rpc_SetClId}        = $stats_json->{nfsstat}{nfsv4}{serverstats}{operations}{setclientid};
		$data->{stats}{server_rpc_SetClIdCf}
			= $stats_json->{nfsstat}{nfsv4}{serverstats}{operations}{setclientidcfrm};
		$data->{stats}{server_rpc_Open}       = $stats_json->{nfsstat}{nfsv4}{serverstats}{operations}{open};
		$data->{stats}{server_rpc_OpenAttr}   = $stats_json->{nfsstat}{nfsv4}{serverstats}{operations}{openattr};
		$data->{stats}{server_rpc_OpenDwnGr}  = $stats_json->{nfsstat}{nfsv4}{serverstats}{operations}{opendwgr};
		$data->{stats}{server_rpc_OpenCfrm}   = $stats_json->{nfsstat}{nfsv4}{serverstats}{operations}{opencfrm};
		$data->{stats}{server_rpc_DelePurge}  = $stats_json->{nfsstat}{nfsv4}{serverstats}{operations}{delepurge};
		$data->{stats}{server_rpc_DelRet}     = $stats_json->{nfsstat}{nfsv4}{serverstats}{operations}{getattr};
		$data->{stats}{server_rpc_GetFH}      = $stats_json->{nfsstat}{nfsv4}{serverstats}{operations}{getfh};
		$data->{stats}{server_rpc_Lock}       = $stats_json->{nfsstat}{nfsv4}{serverstats}{operations}{lock};
		$data->{stats}{server_rpc_LockT}      = $stats_json->{nfsstat}{nfsv4}{serverstats}{operations}{lockt};
		$data->{stats}{server_rpc_LockU}      = $stats_json->{nfsstat}{nfsv4}{serverstats}{operations}{locku};
		$data->{stats}{server_rpc_Close}      = $stats_json->{nfsstat}{nfsv4}{serverstats}{operations}{close};
		$data->{stats}{server_rpc_Verify}     = $stats_json->{nfsstat}{nfsv4}{serverstats}{operations}{verify};
		$data->{stats}{server_rpc_NVerify}    = $stats_json->{nfsstat}{nfsv4}{serverstats}{operations}{nverify};
		$data->{stats}{server_rpc_PutFH}      = $stats_json->{nfsstat}{nfsv4}{serverstats}{operations}{putfh};
		$data->{stats}{server_rpc_PutPubFH}   = $stats_json->{nfsstat}{nfsv4}{serverstats}{operations}{putpubfh};
		$data->{stats}{server_rpc_PutRootFH}  = $stats_json->{nfsstat}{nfsv4}{serverstats}{operations}{putrootfh};
		$data->{stats}{server_rpc_Renew}      = $stats_json->{nfsstat}{nfsv4}{serverstats}{operations}{renew};
		$data->{stats}{server_rpc_RestoreFH}  = $stats_json->{nfsstat}{nfsv4}{serverstats}{operations}{restore};
		$data->{stats}{server_rpc_SaveFH}     = $stats_json->{nfsstat}{nfsv4}{serverstats}{operations}{savefh};
		$data->{stats}{server_rpc_Secinfo}    = $stats_json->{nfsstat}{nfsv4}{serverstats}{operations}{secinfo};
		$data->{stats}{server_rpc_RelLockOwn} = $stats_json->{nfsstat}{nfsv4}{serverstats}{operations}{rellockown};
		$data->{stats}{server_rpc_V4Create}   = $stats_json->{nfsstat}{nfsv4}{serverstats}{operations}{v4create};
		$data->{stats}{server_rpc_BackChannelCt}
			= $stats_json->{nfsstat}{nfsv4}{serverstats}{operations}{nfsv41}{backchannelctrl};
		$data->{stats}{server_rpc_BindConnToSes}
			= $stats_json->{nfsstat}{nfsv4}{serverstats}{operations}{nfsv41}{bindconntosess};
		$data->{stats}{server_rpc_ExchangeID}
			= $stats_json->{nfsstat}{nfsv4}{serverstats}{operations}{nfsv41}{exchangeid};
		$data->{stats}{server_rpc_CreateSess}
			= $stats_json->{nfsstat}{nfsv4}{serverstats}{operations}{nfsv41}{createsess};
		$data->{stats}{server_rpc_DestroySess}
			= $stats_json->{nfsstat}{nfsv4}{serverstats}{operations}{nfsv41}{destroysess};
		$data->{stats}{server_rpc_FreeStateID}
			= $stats_json->{nfsstat}{nfsv4}{serverstats}{operations}{nfsv41}{freestateid};
		$data->{stats}{server_rpc_GetDirDeleg}
			= $stats_json->{nfsstat}{nfsv4}{serverstats}{operations}{nfsv41}{getdirdeleg};
		$data->{stats}{server_rpc_GetDevInfo}
			= $stats_json->{nfsstat}{nfsv4}{serverstats}{operations}{nfsv41}{getdevinfo};
		$data->{stats}{server_rpc_GetDevList}
			= $stats_json->{nfsstat}{nfsv4}{serverstats}{operations}{nfsv41}{getdevlist};
		$data->{stats}{server_rpc_layoutCommit}
			= $stats_json->{nfsstat}{nfsv4}{serverstats}{operations}{nfsv41}{layoutcommit};
		$data->{stats}{server_rpc_LayoutGet}
			= $stats_json->{nfsstat}{nfsv4}{serverstats}{operations}{nfsv41}{layoutget};
		$data->{stats}{server_rpc_LayoutReturn}
			= $stats_json->{nfsstat}{nfsv4}{serverstats}{operations}{nfsv41}{layoutreturn};
		$data->{stats}{server_rpc_GetDirDeleg}
			= $stats_json->{nfsstat}{nfsv4}{serverstats}{operations}{nfsv41}{getdirdeleg};
		$data->{stats}{server_rpc_GetDevInfo}
			= $stats_json->{nfsstat}{nfsv4}{serverstats}{operations}{nfsv41}{getdevinfo};
		$data->{stats}{server_rpc_GetDevList}
			= $stats_json->{nfsstat}{nfsv4}{serverstats}{operations}{nfsv41}{getdevlist};
		$data->{stats}{server_rpc_layoutCommit}
			= $stats_json->{nfsstat}{nfsv4}{serverstats}{operations}{nfsv41}{layoutcommit};
		$data->{stats}{server_rpc_LayoutGet}
			= $stats_json->{nfsstat}{nfsv4}{serverstats}{operations}{nfsv41}{layoutget};
		$data->{stats}{server_rpc_LayoutReturn}
			= $stats_json->{nfsstat}{nfsv4}{serverstats}{operations}{nfsv41}{layoutreturn};
		$data->{stats}{server_rpc_SecInfNoName}
			= $stats_json->{nfsstat}{nfsv4}{serverstats}{operations}{nfsv41}{reclaimcompl};
		$data->{stats}{server_rpc_Sequence}
			= $stats_json->{nfsstat}{nfsv4}{serverstats}{operations}{nfsv41}{sequence};
		$data->{stats}{server_rpc_SetSSV} = $stats_json->{nfsstat}{nfsv4}{serverstats}{operations}{nfsv41}{setssv};
		$data->{stats}{server_rpc_TestStateID}
			= $stats_json->{nfsstat}{nfsv4}{serverstats}{operations}{nfsv41}{teststateid};
		$data->{stats}{server_rpc_WantDeleg}
			= $stats_json->{nfsstat}{nfsv4}{serverstats}{operations}{nfsv41}{wantdeleg};
		$data->{stats}{server_rpc_DestroyClId}
			= $stats_json->{nfsstat}{nfsv4}{serverstats}{operations}{nfsv41}{destroyclid};
		$data->{stats}{server_rpc_ReclaimCompl}
			= $stats_json->{nfsstat}{nfsv4}{serverstats}{operations}{nfsv41}{reclaimcompl};
		$data->{stats}{server_rpc_Allocate}
			= $stats_json->{nfsstat}{nfsv4}{serverstats}{operations}{nfsv42}{allocate};
		$data->{stats}{server_rpc_Copy} = $stats_json->{nfsstat}{nfsv4}{serverstats}{operations}{nfsv42}{copy};
		$data->{stats}{server_rpc_CopyNotify}
			= $stats_json->{nfsstat}{nfsv4}{serverstats}{operations}{nfsv42}{copynotify};
		$data->{stats}{server_rpc_Deallocate}
			= $stats_json->{nfsstat}{nfsv4}{serverstats}{operations}{nfsv42}{deallocate};
		$data->{stats}{server_rpc_IOAdvise}
			= $stats_json->{nfsstat}{nfsv4}{serverstats}{operations}{nfsv42}{ioadvise};
		$data->{stats}{server_rpc_LayoutError}
			= $stats_json->{nfsstat}{nfsv4}{serverstats}{operations}{nfsv42}{layouterror};
		$data->{stats}{server_rpc_LayoutStats}
			= $stats_json->{nfsstat}{nfsv4}{serverstats}{operations}{nfsv42}{layoutstats};
		$data->{stats}{server_rpc_OffloadCncl}
			= $stats_json->{nfsstat}{nfsv4}{serverstats}{operations}{nfsv42}{offloadcncl};
		$data->{stats}{server_rpc_OffloadStat}
			= $stats_json->{nfsstat}{nfsv4}{serverstats}{operations}{nfsv42}{offloadstat};
		$data->{stats}{server_rpc_ReadPlus}
			= $stats_json->{nfsstat}{nfsv4}{serverstats}{operations}{nfsv42}{readplus};
		$data->{stats}{server_rpc_Seek} = $stats_json->{nfsstat}{nfsv4}{serverstats}{operations}{nfsv42}{seek};
		$data->{stats}{server_rpc_WriteSame}
			= $stats_json->{nfsstat}{nfsv4}{serverstats}{operations}{nfsv42}{writesame};
		$data->{stats}{server_rpc_Clone} = $stats_json->{nfsstat}{nfsv4}{serverstats}{operations}{nfsv42}{clone};
		$data->{stats}{server_rpc_GetExtattr}
			= $stats_json->{nfsstat}{nfsv4}{serverstats}{operations}{nfsv42}{getextattr};
		$data->{stats}{server_rpc_SetExtattr}
			= $stats_json->{nfsstat}{nfsv4}{serverstats}{operations}{nfsv42}{setextattr};
		$data->{stats}{server_rpc_ListExtattr}
			= $stats_json->{nfsstat}{nfsv4}{serverstats}{operations}{nfsv42}{listextattr};
		$data->{stats}{server_rpc_RmExtattr}
			= $stats_json->{nfsstat}{nfsv4}{serverstats}{operations}{nfsv42}{rmextattr};
		$data->{stats}{server_Clients}         = $stats_json->{nfsstat}{nfsv4}{serverstats}{server}{clients};
		$data->{stats}{server_OpenOwner}       = $stats_json->{nfsstat}{nfsv4}{serverstats}{server}{openowner};
		$data->{stats}{server_Opens}           = $stats_json->{nfsstat}{nfsv4}{serverstats}{server}{opens};
		$data->{stats}{server_LockOwner}       = $stats_json->{nfsstat}{nfsv4}{serverstats}{server}{lockowner};
		$data->{stats}{server_Locks}           = $stats_json->{nfsstat}{nfsv4}{serverstats}{server}{locks};
		$data->{stats}{server_Delegs}          = $stats_json->{nfsstat}{nfsv4}{serverstats}{server}{delegs};
		$data->{stats}{server_Layouts}         = $stats_json->{nfsstat}{nfsv4}{serverstats}{server}{layouts};
		$data->{stats}{server_cache_Inprog}    = $stats_json->{nfsstat}{nfsv4}{serverstats}{cache}{inprog};
		$data->{stats}{server_cache_NonIdem}   = $stats_json->{nfsstat}{nfsv4}{serverstats}{cache}{nonidem};
		$data->{stats}{server_cache_Misses}    = $stats_json->{nfsstat}{nfsv4}{serverstats}{cache}{misses};
		$data->{stats}{server_cache_CacheSize} = $stats_json->{nfsstat}{nfsv4}{serverstats}{cache}{cachesize};
		$data->{stats}{server_cache_TCPPeak}   = $stats_json->{nfsstat}{nfsv4}{serverstats}{cache}{tcppeak};
	};
} ## end if ( $^O eq 'freebsd' )

####
####
#### handle getting stats for Linux
####
####
if ( $^O eq 'linux' ) {
	my $output_raw    = `nfsstat | sed 's/[0-9\.]*\%//g'`;
	my @output_split  = split( /\n/, $output_raw );
	my $previous_line = '';
	my $mode          = '';
	foreach my $line (@output_split) {
		if ( $line =~ /^[Cc]lient/ ) {
			$mode = 'client';
		} elsif ( $line =~ /^[Ss]erver/ ) {
			$mode = 'server';
		}
		if ( $previous_line =~ /calls\ +badcalls\ +badfmt\ +badauth\ +badclnt/ && $mode eq 'server' ) {

		}
		$previous_line = $line;
	} ## end foreach my $line (@output_split)
} ## end if ( $^O eq 'linux' )

####
####
#### figure out if is a client and/or server
####
####
my @stat_keys = keys( %{ $data->{stats} } );
foreach my $item (@stat_keys) {
	if ( $item =~ /^client/ && defined( $data->{stats}{$item} ) && $data->{stats}{$item} > 0 ) {
		$data->{is_client} = 1;
	} elsif ( $item =~ /^server/ && defined( $data->{stats}{$item} ) && $data->{stats}{$item} > 0 ) {
		$data->{is_server} = 1;
	}
}

####
####
#### if server, call showmount
####
####
if ( $data->{is_server} ) {
	my $output_raw   = `showmount -a`;
	my @output_split = split( /\n/, $output_raw );
	foreach my $line (@output_split) {
		if ( $line =~ /\:\// ) {
			my ( $host, $path ) = split( /\:\//, $line );
			push( @{ $data->{mounted_by} }, { host => $host, path => '/' . $path } );
		}
	}
} ## end if ( $data->{is_server} )

####
####
#### if client, call nfsstat -m
####
####
if ( $data->{is_client} ) {
	if ( $^O eq 'freebsd' ) {
		my $output_raw   = `nfsstat -m`;
		my @output_split = split( /\n/, $output_raw );
		my $host;
		my $rpath;
		my $lpath;
		foreach my $line (@output_split) {
			if ( $line =~ /\:\/.* on \// ) {
				$host = $line;
				$host =~ s/\:\/.*$//;

				$rpath = $line;
				$rpath =~ s/\ on\ \/.*$//;
				$rpath =~ s/^.*\:\///;
				$rpath = '/' . $rpath;

				$lpath = $line;
				$lpath =~ s/^.*\:\/.*\ on \///;
				$lpath = '/' . $lpath;
			} elsif ( $line =~ /\,/ && defined($host) && defined($rpath) && defined($lpath) ) {
				my @flags;
				my %opts;
				my @line_split = split( /\,/, $line );
				foreach my $item (@line_split) {
					if ( $item =~ /\=/ ) {
						my ( $var, $val ) = split( /\=/, $item );
						$opts{$var} = $val;
					} else {
						push( @flags, $item );
					}
				}
				push(
					@{ $data->{mounts} },
					{ host => $host, rpath => $rpath, lpath => $lpath, flags => \@flags, opts => \%opts }
				);
			} ## end elsif ( $line =~ /\,/ && defined($host) && defined...)
		} ## end foreach my $line (@output_split)
	} elsif ( $^O eq 'linux' ) {
		my $output_raw   = `nfsstat -m`;
		my @output_split = split( /\n/, $output_raw );
		my $host;
		my $rpath;
		my $lpath;
		foreach my $line (@output_split) {
			if ( $line =~ /^\/.*\ from\ .*\:\/.*/ ) {
				$lpath = $line;
				$lpath =~ s/\ from\ .*$//;

				$host = $line;
				$host =~ s/.*\ from\ //;
				$host =~ s/\:\/.*$//;

				$rpath = $line;
				$rpath =~ s/^.*\:\///;
				$rpath = '/' . $rpath;
			} elsif ( $line =~ /Flags\:[\ \t]+/ && defined($lpath) && defined($host) && defined($rpath) ) {
				$line =~ s/^.*Flags\:[\ \t]+//;
				my @flags;
				my %opts;
				my @line_split = split( /\,/, $line );
				foreach my $item (@line_split) {
					if ( $item =~ /\=/ ) {
						my ( $var, $val ) = split( /\=/, $item );
						$opts{$var} = $val;
					} else {
						push( @flags, $item );
					}
				}
				push(
					@{ $data->{mounts} },
					{ host => $host, rpath => $rpath, lpath => $lpath, flags => \@flags, opts => \%opts }
				);
			} ## end elsif ( $line =~ /Flags\:[\ \t]+/ && defined(...))
		} ## end foreach my $line (@output_split)
	} ## end elsif ( $^O eq 'linux' )
} ## end if ( $data->{is_client} )

#add the data has to the return hash
$to_return->{data} = $data;

#finally render the JSON
my $raw_json = encode_json($to_return);
if ($write) {
	write_file( $cache_base, $raw_json );
	# compress and write to the cache file for it
	my $compressed_string;
	gzip \$raw_json => \$compressed_string;
	my $compressed = encode_base64($compressed_string);
	$compressed =~ s/\n//g;
	$compressed = $compressed . "\n";
	my $print_compressed = 0;
	if ( length($compressed) > length($raw_json) ) {
		write_file( $cache_base . '.snmp', $raw_json );
	} else {
		write_file( $cache_base . '.snmp', $compressed );
		$print_compressed = 1;
	}

	if ( $compress && $print_compressed ) {
		print $compressed;
	} else {
		print $raw_json;
	}
} else {
	if ( !$compress ) {
		print $raw_json. "\n";
		exit;
	}

	# compress and write to the cache file for it
	my $compressed_string;
	gzip \$raw_json => \$compressed_string;
	my $compressed = encode_base64($compressed_string);
	$compressed =~ s/\n//g;
	$compressed = $compressed . "\n";
	my $print_compressed = 0;
	if ( length($compressed) > length($raw_json) ) {
		print $raw_json;
	} else {
		print $compressed;
	}
} ## end else [ if ($write) ]
